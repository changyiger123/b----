<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.simplework.business.b2b.dao.UserDao">
  <resultMap id="BaseResultMap" type="com.simplework.business.b2b.pojo.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="register_time" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="register_ip" jdbcType="VARCHAR" property="registerIp" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="mod" jdbcType="VARCHAR" property="mod" />
  </resultMap>
  <resultMap id="BaseResultMap2" extends="BaseResultMap" type="com.simplework.business.b2b.pojo.User">
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="card" jdbcType="VARCHAR" property="card" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="pay_password" jdbcType="VARCHAR" property="payPassword" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="integral" jdbcType="BIGINT" property="integral" />
  </resultMap>
  <sql id="Base_Column_List">
    id, mobile, username, realname, avatar, register_time, register_ip, status, mod
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap2">
    select
    t0.id, t0.mobile, t0.username, t0.realname, t0.avatar, t0.register_time, t0.register_ip, t0.status, t0.`mod`,
    t1.name, t1.card,
    t2.uuid, t2.password, t2.pay_password, t2.salt,
    (t3.int_income - t3.int_consume - t3.int_freeze) as integral
    from user t0
    left join user_real t1 on t0.id = t1.user_id
    left join user_security t2 on t0.id = t2.user_id
    left join user_integral t3 on t0.id = t3.user_id
    where t0.id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="queryByMobile" parameterType="java.lang.String" resultMap="BaseResultMap2">
    select
    t0.id, t0.mobile, t0.username, t0.realname, t0.avatar, t0.register_time, t0.register_ip, t0.status, t0.`mod`,
    t1.name, t1.card,
    t2.uuid, t2.password, t2.pay_password, t2.salt,
    (t3.int_income - t3.int_consume - t3.int_freeze) as integral
    from user t0
    left join user_real t1 on t0.id = t1.user_id
    left join user_security t2 on t0.id = t2.user_id
    left join user_integral t3 on t0.id = t3.user_id
    where t0.mobile = #{mobile,jdbcType=VARCHAR}
  </select>
  <select id="queryByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    t0.id, t0.mobile, t0.username, t0.realname, t0.avatar, t0.register_time, t0.register_ip, t0.status, t0.`mod`,
    t1.name, t1.card,
    t2.uuid, t2.password, t2.pay_password, t2.salt,
    (t3.int_income - t3.int_consume - t3.int_freeze) as integral
    from user t0
    left join user_real t1 on t0.id = t1.user_id
    left join user_security t2 on t0.id = t2.user_id
    left join user_integral t3 on t0.id = t3.user_id
    where t0.username = #{username,jdbcType=VARCHAR}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insertSelective" parameterType="com.simplework.business.b2b.pojo.User" keyProperty="id">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="registerTime != null">
        register_time,
      </if>
      <if test="registerIp != null">
        register_ip,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="mod != null">
        `mod`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null">
        #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="mod != null">
        #{mod,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simplework.business.b2b.pojo.User">
    update user
    <set>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null">
        register_ip = #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="mod != null">
        `mod` = #{mod,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="count" parameterType="com.simplework.business.iframework.mybatis.query.ConditionExample" resultType="java.lang.Integer">
    select count(*) from user
	<if test="_parameter != null" >
		<include refid="conditionQuery.where" />
	</if>
  </select>
  <select id="query" parameterType="com.simplework.business.iframework.mybatis.query.ConditionExample" resultMap="BaseResultMap">
    select
	<if test="distinct" >
		distinct
	</if>
	<include refid="Base_Column_List" />
	from user
	<if test="_parameter != null" >
		<include refid="conditionQuery.where" />
	</if>
	<if test="orderByClause != null" >
		order by ${orderByClause}
	</if>
	<if test="limit != null" >
		<if test="offset != null" >
			limit ${offset}, ${limit}
		</if>
		<if test="offset == null" >
			limit ${limit}
		</if>
	</if>
  </select>
  <select id="queryForProjectManage" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select * from user where id in (select manager_id from project_manager where project_id=#{projectId})
  </select>
  <select id="queryForProjectMember" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select * from user where id in (select user_id from project_member where project_id=#{projectId})
  </select>
</mapper>